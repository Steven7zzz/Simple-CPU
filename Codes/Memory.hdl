// NAME and UIN
// Haodong Luo 831006011


CHIP Memory {
	
    IN  in[16],       // Data to be written into memory
        load,      	  // Variable which decides whether to write to memory or not
        address[16];  // Address for the register which we want access
    
    OUT out[16];      // Output from the memory

    PARTS:
    // Add your code here
    // Data Memory has three sections: 32K RAM, 8K Screen, 1 Keyboard. Unit is 1 word (16 bits)

    // check for writing 
    // Address RAM (32K) with 15 address bits [0..14]

    Not(in=address[15], out=na);
    And(a=na, b=load, out=rload);  // address[15] is 0 and load is 1
    RAM32K(in=in, load=rload, address=address[0..14], out=ramout);

    // Address SCREEN(8K) with address[0..12] will be used to map the address to the screen

    Not(in=address[13], out=n13);
    Not(in=address[14], out=n14);
    And(a=n13, b=n14, out=np);
    And(a=np, b=address[15], out=sload); // address[13..15] is 100
    Screen(in=true, load=sload, address=address[0..12], out=screenout);

    // Address KEYBOARD(1) 

    Keyboard(out=keyboardout);

    // Combine all of them in a mux (Hint: Mux8Way16)

    Mux8Way16(a=ramout, b=ramout, c=ramout, d=ramout, e=screenout, f=keyboardout, g=keyboardout, h=keyboardout, sel=address[13..15], out=out);

    // ram32k is called when address[15] is 0, which are 000 001 010 011
    // screen is called only 100
    // keyboard is called no matter 
    // used for reading
}